@using SmartBatteryTesterWebApp.UI.Models.Chart
@model ChartJsData
@{
    ViewData["Title"] = "Измерения";
}

<div class="text-center">
    <h3>Текущие измерения</h3>
</div>
<div>
    <p id="signalRMessage"></p>

    <div id="chartContainer">
        <h5>График разряда</h5>
        <canvas id="measurementLineChart" ></canvas>
    </div>
</div>

<script src="/js/aspnet-signalr/signalr.min.js"></script>
<script src="~/js/Chart.js/chart.umd.js"></script>

@if (Model.Labels.Count == 0)
{
    <script>
        document.getElementById('chartContainer').hidden = true;
        document.getElementById('signalRMessage').innerHTML = 'Начтине тест на ПК';
    </script>
}

<script type="text/javascript">
    const hubConnection = new signalR.HubConnectionBuilder().withUrl('/measurementsHub').build();
    const chartElement = document.getElementById('chartContainer');

    let context = document.getElementById('measurementLineChart');
    let lineChart = new Chart(context, {
        type: 'line',
        data: @Json.Serialize(Model),
    });
        
    function addData(chart, label, newVoltageData, newCurrentData) {
        if (`${label}` === '') {
            return;
        }

        chart.data.labels.push(label);
        chart.data.datasets[0].data.push(newVoltageData);
        chart.data.datasets[1].data.push(newCurrentData);
        chart.update();
    }

    hubConnection.on('Receive', function(message, chartData) {
        let newVoltageData = chartData.datasets[0].data[0];
        let newCurrentData = chartData.datasets[1].data[0];

        chartElement.hidden = false;

        let statusElement = document.getElementById('signalRMessage');
        
        if (statusElement.childElementCount === 0) {
            statusElement.innerHTML = message;
        }

        statusElement.childNodes[0].nodeValue = message;

        addData(lineChart, chartData.labels, newVoltageData, newCurrentData);
    });

    hubConnection.start();
</script>



