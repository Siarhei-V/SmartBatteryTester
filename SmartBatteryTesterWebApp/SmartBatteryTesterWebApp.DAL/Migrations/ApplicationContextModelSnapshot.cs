// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartBatteryTesterWebApp.DAL.EF;

#nullable disable

namespace SmartBatteryTesterWebApp.DAL.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("SmartBatteryTesterWebApp.DAL.Entities.Measurement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Current")
                        .HasColumnType("TEXT");

                    b.Property<string>("MeasurementDateTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("MeasurementSetId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Voltage")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MeasurementSetId");

                    b.ToTable("Measurements");
                });

            modelBuilder.Entity("SmartBatteryTesterWebApp.DAL.Entities.MeasurementSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan?>("DischargeDuration")
                        .HasColumnType("TEXT");

                    b.Property<string>("MeasurementName")
                        .HasColumnType("TEXT");

                    b.Property<string>("MeasurementStatus")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ResultCapacity")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MeasurementSets");
                });

            modelBuilder.Entity("SmartBatteryTesterWebApp.DAL.Entities.Measurement", b =>
                {
                    b.HasOne("SmartBatteryTesterWebApp.DAL.Entities.MeasurementSet", "SetOfMeasurements")
                        .WithMany()
                        .HasForeignKey("MeasurementSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SetOfMeasurements");
                });
#pragma warning restore 612, 618
        }
    }
}
